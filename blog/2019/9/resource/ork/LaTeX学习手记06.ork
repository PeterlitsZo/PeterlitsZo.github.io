LaTeX学习手记06
=======================================
正文
---------------------------------------
上一章全是讲得nodes，是很重要啦，但是这一节可能会更重要一些。
#### 几何画图
这一次使用的包是`clac, intersections, through, backgroud`。

首先是一条蓝色的线AB：
``` tex
\begin{tikzpicture}
    \coordinate [label=left:\textcolor{blue}{$A$}]  (A) at (0,0);
    \coordinate [label=right:\textcolor{blue}{$B$}] (B) at (1.25,0.25);

    \draw[blue] (A)--(B);
\end{textpicture}
```

然后以A 为圆心，AB 为半径，作一个圆：（方法一）
``` tex
% use library clac
\begin{tikzpicture}
    \coordinate [label=left:$A$]    (A) at (0,0);
    \coordinate [label=right:$B$]   (B) at (1.25,0.25);
    \draw (A)--(B);

    \draw (A) let   \p1 = ($(B) - (A)$)
              in    circle({ veclen(\x1,\y1) });
\end{tikzpicture}
```

let ... in 操作符可以放在path 中间，让一个坐标或者其他结果赋值给多个值。其中，`\x<digit>` 指x 轴，`\y<digit>` 指y 轴，`\p<digit>`指这个坐标。趁势为B 作一个圆：
``` tex
\begin{tikzpicture}
    \coordinate [label=left:$A$]    (A) at (0,0);
    \coordinate [label=right:$B$]   (B) at (1.25,0.25);
    \draw (A)--(B);

    \draw let   \p1 = ($ (B)-(A) $),
                \n2 = {veclen(\x1,\y1)}
          in    (A) circle (\n2)
                (B) circle (\n2);
\end{tikzpicture}
```

其中坐标也可以使用长名称，但是要加大括号`\n{radius}`。

#### 先跳出来，看看node 和coordinate 到底有什么不同吧
coordinate 本身是the shortcut for `\path ... coordinate[<options>](<name>) at (<coordinate>) ...`。而它与这个表示的含义相同：`node [shape=coordinate] [<options>](<name>) at (<coordinate>) {}`。（不过，这里的at part 可以没有）

一般来说，node 会默认建成这三种shape 中的一种：`rectangle`，`circle` and `coordinate`。

总的来说，如果不只是建一个点的话（比如说先要放一个圆圈，设置一个label之类的），用node来表示交点更好，也更抽象。

#### 聪明的我马上就跳回去了！
通过使用`through` library 可以创建一个through 过了一个给定点的形状。
``` tex
\node [draw, circle through = (B), label = left:$D$] at (A) {};
% $D$是画在圆附近的。
```

应该是这样的：node 中，使用label 会考虑它的形状的，但是放在`{}` 中就不会考虑它的形状......是这样吗？

接下来是使用`intersections` 库来找到两个圆的交点。

两个相交的圆会有两个交点：`intersection-1` 和`intersection-2` 而node 的path 圆和node 拥有相同的名字，只是可以看做在不同的`namespace` 中罢了。
``` tex
\node (D) [name path=D,draw,circle through=(B),label=left:$D$]  at (A) {};
\node (E) [name path=E,draw,circle through=(A),label=right:$E$] at (B) {};

\path [name intersections={of=D and E}];

\coordinate [label=above:$C$] (C) at (intersection-1);
```

其中`intersections` 也提供了可以直接命名的办法：
``` tex
\path [name intersections={of=D and E, by={[lable=above:$C$]C,[label=below:$C'$]C'} }];

\draw [name path=C--C',red] (C)--(C');
```

小方法：可以使用`\def\...{...}` 来定义相关宏。可以使用`\colorset`来定义相关颜色。

#### partway calculations
可以新建一个点，用`($`开头，用这个结尾`$)`,中间包含了`!<part>!`的partway 运算符来表示。比如新建一个A, B 中点：
``` tex
\node [fill=red, inner sep=1pt, label=below:$X$] (X) at ( $(A)!0.5!(B)$ ) {};
```

啊啊啊啊！好棒，partway calculations还可以更改角度（就像rotate一样）！使用形式是`( $(A)!<times of AB's part's long>!<angle which begin on A->B>:(B)$ )`。而且这种运算符支持链式结构，可以连成很长一串。

为了找到BF 与圆B的交点，除了使用`intersections` 之外，还可以使用partway，只要知道了半径的长度。（圆过C 点）
``` tex
\path let \p1 = ( $(B)-(C)$ ) in
        coordinate [label=left:$G$] (G) at ( $(B)!veclen(\x1,\x2)!(F)$ );
```

当然`intersections` 会显得简单一点。
``` tex
\path [name path=B--F] (B)--(F);
\path [name intersections={ of = H and B--F,by = [label=left:$G$]G }];
```

#### （原文13.5.1节）通用句法
通用句法是：`( [<options>]$<coordination>$ )`其中`$`表明了被它括住的是一个数学表达式。

而`<coordinations>`是由`<factor>*<coordinate><modifiers>`和加号和减号构成的。

其中 factor 是可选的。对于复杂的 factor 还可以在其前后加上大括号。

而后面的`<modifiers>`就更加有意思了：（第一种）
``` tex
    <coordinate>!<number>!<angle>:<second coordinate>
```

`<angle>`是可选的。它表明了对于原点的绕点角度。

让它显得更厉害的是它可以链式使用（虽然不知道哪里用得上它。。。）

第二种形式和第一种差不多，区别在于，第二种可以使用距离而非表示倍数的数。

第三种中，两个感叹号中夹着的是点：
``` tex
    <coordinate>!<projection coordinate>!<angle>:<second coordinate>
```

它找到的还是两点直线上的点，但是与之不同的是，它是依靠`projection coodinate`的射影来找的。

用在画垂线这方面，垂点已知用前两种，垂点不知道就用第三种。

#### 关于令角A等于角B的方法
``` tex
\path   let 
            \p1 = ($ (C)-(A) $),
            \p2 = ($ (E')-(A) $),
            \n3 = {\x1*\x2+\y1*\y2},
            \n{angle} = {acos( \n3 /(veclen(\p1)*veclen(\p2)))}
        in coordinate                       (E'')   at ($ (C)!1.5!\n{angle}:(B)$);
```

这是之前写的，实在是找不到该怎么求角。\n{angle} 就是要求的角，然后引一条线找点。

参考
---------------------------------------
- [1][官方网址](http://www.texample.net/media/pgf/builds/pgfmanual_3.0.1a.pdf)，[镜像(html文档下打开)](./resources/pdf/pgfmanual.pdf)，[镜像(md文档下打开)](../resources/pdf/pgfmanual.pdf)